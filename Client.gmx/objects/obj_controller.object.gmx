<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar sendbuff, client, pickedProjects, teams;
name = get_string("Enter your name","");
sendbuff = buffer_create(256, buffer_grow, 1); // Create a buffer for the network messages
client = network_create_socket(network_socket_tcp); // Create a TCP/IP socket
var connection = network_connect(client, "localhost", 6510); // Connect to our server
state = "init";
capital = 0;
workers_red = 0;
workers_blue = 0;
workers_yellow = 0;
workers_green = 0;
skill_troubleshooting = 0;
skill_intel = 0;
skill_teamwork = 0;
skill_communication = 0;
skill_planning = 0;
maxpicks = 2;
canPickProjects = false;
pickedProjects = ds_list_create();
teams = ds_list_create();

if (connection != 0) { // show error if connection failed
    show_message("Error - can not connect to server!!");
}
else {
    buffer_seek(sendbuff, buffer_seek_start, 0); // You always have to do this before writing to a buffer. (it resets it to the 0 position)
    buffer_write(sendbuff, buffer_s16, 1 ); // Write the unique identifier so that the server will be able to recognize what kind of message this is
    buffer_write(sendbuff, buffer_string, name); // Write the name you just entered to the buffer
    network_send_packet(client, sendbuff, buffer_tell(sendbuff)); // Send this message to the server
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    ReceiveData_Client(); // If the arrived message isn't a connection or disconnection, we'll process it with this script

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == rm_gamescreen) 
{
    instance_create(0,0,obj_worker_red);
    instance_create(0,0,obj_worker_blue);
    instance_create(0,0,obj_worker_yellow);
    instance_create(0,0,obj_worker_green);
    
    instance_create(0,0,obj_info);
    instance_create(0,0, obj_level_info_icon);
    instance_create(0,0,obj_balance);    
    instance_create(0,0,obj_roundtime);
    instance_create(0,0,obj_capital);
    instance_create(0,0,obj_teamname);
    instance_create(0,0,obj_level_info);
    instance_create(0,0,obj_levels);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == rm_client) 
{
    draw_set_font(fnt_small);
    draw_set_halign(fa_center);
    draw_set_color(c_green);
    draw_text(room_width/2 + 80, 0, state);
    
    draw_set_color(c_black);
    draw_set_font(fnt_small);
    draw_set_halign(fa_left);
    draw_text(0, 0, "Team: " + string(name));
    draw_text(700, 0, "Geld: $" + string(capital));
    draw_line(0, 25, room_width, 25);
}

if(room == rm_gamescreen) 
{
    draw_set_font(fnt_small);
    draw_set_halign(fa_left);
    draw_set_color(c_black);
    draw_text(570, 5, "Team: "+string(name));
    draw_text(1018, 5, "Geld: "+string(capital));
    draw_text(1162, 505, "Level");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
